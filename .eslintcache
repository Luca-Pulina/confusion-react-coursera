[{"C:\\myTut\\react\\confusion\\src\\reportWebVitals.js":"1","C:\\myTut\\react\\confusion\\src\\App.js":"2","C:\\myTut\\react\\confusion\\src\\index.js":"3","C:\\myTut\\react\\confusion\\src\\components\\MenuComponent.js":"4","C:\\myTut\\react\\confusion\\src\\components\\DishdetailComponent.js":"5","C:\\myTut\\react\\confusion\\src\\components\\MainComponent.js":"6","C:\\myTut\\react\\confusion\\src\\shared\\dishes.js":"7","C:\\myTut\\react\\confusion\\src\\components\\HeaderComponent.js":"8","C:\\myTut\\react\\confusion\\src\\components\\FooterComponent.js":"9","C:\\myTut\\react\\confusion\\src\\components\\ContactComponent.js":"10","C:\\myTut\\react\\confusion\\src\\components\\AboutComponent.js":"11","C:\\myTut\\react\\confusion\\src\\components\\HomeComponent.js":"12","C:\\myTut\\react\\confusion\\src\\redux\\comments.js":"13","C:\\myTut\\react\\confusion\\src\\redux\\configureStore.js":"14","C:\\myTut\\react\\confusion\\src\\redux\\dishes.js":"15"},{"size":362,"mtime":1609865715123,"results":"16","hashOfConfig":"17"},{"size":261,"mtime":1610121643348,"results":"18","hashOfConfig":"17"},{"size":639,"mtime":1610120740255,"results":"19","hashOfConfig":"17"},{"size":1408,"mtime":1610223228591,"results":"20","hashOfConfig":"17"},{"size":6412,"mtime":1610478852392,"results":"21","hashOfConfig":"17"},{"size":2412,"mtime":1610478805732,"results":"22","hashOfConfig":"17"},{"size":1614,"mtime":1610197628839,"results":"23","hashOfConfig":"17"},{"size":5121,"mtime":1610459922360,"results":"24","hashOfConfig":"17"},{"size":2809,"mtime":1610125004870,"results":"25","hashOfConfig":"17"},{"size":9748,"mtime":1610457279959,"results":"26","hashOfConfig":"17"},{"size":4479,"mtime":1610223197626,"results":"27","hashOfConfig":"17"},{"size":1112,"mtime":1610197785387,"results":"28","hashOfConfig":"17"},{"size":191,"mtime":1610471130341,"results":"29","hashOfConfig":"17"},{"size":482,"mtime":1610471362260,"results":"30","hashOfConfig":"17"},{"size":181,"mtime":1610471063724,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"91eksu",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\myTut\\react\\confusion\\src\\reportWebVitals.js",[],"C:\\myTut\\react\\confusion\\src\\App.js",[],"C:\\myTut\\react\\confusion\\src\\index.js",[],["65","66"],"C:\\myTut\\react\\confusion\\src\\components\\MenuComponent.js",[],"C:\\myTut\\react\\confusion\\src\\components\\DishdetailComponent.js",["67","68","69"],"C:\\myTut\\react\\confusion\\src\\components\\MainComponent.js",[],"C:\\myTut\\react\\confusion\\src\\shared\\dishes.js",[],"C:\\myTut\\react\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\myTut\\react\\confusion\\src\\components\\FooterComponent.js",[],"C:\\myTut\\react\\confusion\\src\\components\\ContactComponent.js",["70","71","72","73","74","75"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    \r\n    }\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"#\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","C:\\myTut\\react\\confusion\\src\\components\\AboutComponent.js",[],"C:\\myTut\\react\\confusion\\src\\components\\HomeComponent.js",[],"C:\\myTut\\react\\confusion\\src\\redux\\comments.js",[],"C:\\myTut\\react\\confusion\\src\\redux\\configureStore.js",[],["76","77"],"C:\\myTut\\react\\confusion\\src\\redux\\dishes.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":112,"column":37,"nodeType":"84","endLine":112,"endColumn":137},{"ruleId":"82","severity":1,"message":"85","line":124,"column":37,"nodeType":"84","endLine":130,"endColumn":39},{"ruleId":"82","severity":1,"message":"86","line":146,"column":37,"nodeType":"84","endLine":146,"endColumn":150},{"ruleId":"87","severity":1,"message":"88","line":65,"column":29,"nodeType":"84","endLine":65,"endColumn":80},{"ruleId":"82","severity":1,"message":"85","line":79,"column":37,"nodeType":"84","endLine":85,"endColumn":44},{"ruleId":"82","severity":1,"message":"85","line":101,"column":37,"nodeType":"84","endLine":107,"endColumn":44},{"ruleId":"82","severity":1,"message":"85","line":123,"column":37,"nodeType":"84","endLine":129,"endColumn":44},{"ruleId":"82","severity":1,"message":"85","line":146,"column":37,"nodeType":"84","endLine":152,"endColumn":44},{"ruleId":"82","severity":1,"message":"86","line":167,"column":37,"nodeType":"84","endLine":169,"endColumn":68},{"ruleId":"78","replacedBy":"89"},{"ruleId":"80","replacedBy":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["91"],["92"],"no-global-assign","no-unsafe-negation"]